

import java.io.IOException;

import java.lang.*;

import java.util.Scanner;

public class LunarLander {
    public static void main(String[] args) throws IOException {

        // TODO find a way to make the thrusters level out at the right speed (openloop controler) calibrate
        // TODO find a way to input thrust every time slice( feedback controler ) #DONE


    final double GRAVITY = 1.352; 		//gravity in m/sec^2
    final double MAX_THRUST = 200.0; 		//maximum engine thrust in m/sec^2
    final double MAX_BURN_RATE = 10.0; 	//fuel burn rate at max thrust kg/sec
    final double TIME_SLICE = 5.0; 		//time between thrust choices in secs

    final double INITIAL_HEIGHT = 1000000;		//Starting height in meters
    final double INITIAL_VELOCITY = 8000.0;	//Starting descent rate (m/sec)
    final double INITIAL_FUEL = 45000.0;		//Starting fuel in kg

    final double INFINITY = 1E10; 	//a time very far in the future
    final double SMALL = 0.001; 	//acceleration below this will be called 0



    boolean touchdown = false; 		//set to true on landing
    boolean fuel_out = false; 		//set to true when fuel used up
    double time_to_touchdown = 0; 	//secs from now to touchdown
    double time_to_fuel_out = 0; 	//secs from now to fuel gone

    double thrust = 0;	//percentage of thrust (0-100) set by user
    double a = 0; 		//acceleration caused by thrust plus gravity

    // Set up the initial configuration at time t=0

    double h = INITIAL_HEIGHT;
    double v = INITIAL_VELOCITY;
    double f = INITIAL_FUEL;
    double t = 0;

    Scanner input = new Scanner(System.in);
        System.out.println("please enter 1 for feedback controler");
        System.out.println("please enter 2 for openloopcontroler");
        int x = input.nextInt();
    if ( x == 1) {
        while (!touchdown) {

            System.out.println("Enter Thrust (%)");
            thrust = input.nextDouble();


            // Display the current situation

            System.out.println("Time: " + t + " secs");
            System.out.println("Height: " + h + " m");
            System.out.println("Descent rate: " + v + " m/sec");
            System.out.println("Fuel left: " + f + " kg");
            System.out.println();


            boolean validResponse = false;
            while (!validResponse) {                    //TODO valid reponse check feedback controller
                System.out.println("Thrust: " + thrust + "%");

                if (thrust >= 0.0 && thrust <= 100.0)
                    validResponse = true;
                else
                    System.out.println("Only values 0 to 100 will work.");
                break;
            }
            System.out.println();

            // Calculate the acceleration, and how long fuel will last

            a = (GRAVITY - MAX_THRUST * thrust / 100.0);

            time_to_fuel_out = f / (MAX_BURN_RATE * thrust / 100.0);

            // calculate time_to_touchdown assuming fuel never runs out

            double discrim = v * v + 2 * h * a;
            if (discrim < 0)
                time_to_touchdown = INFINITY;
            else if (Math.abs(a) < SMALL)
                time_to_touchdown = h / v;
            else
                time_to_touchdown = (v - Math.sqrt(discrim)) / -a;

            // Handle the case when fuel will run out first

            if (time_to_fuel_out < time_to_touchdown
                    && time_to_fuel_out <= TIME_SLICE) {

                System.out.println("Out of fuel! Free fall!");
                fuel_out = true;
                t = t + time_to_fuel_out;
                f = 0.0;
                h = h - time_to_fuel_out * v - a * time_to_fuel_out * time_to_fuel_out / 2.0;
                v = v + a * time_to_fuel_out;
                a = GRAVITY; //gravity never sleeps!
                time_to_touchdown = (v - Math.sqrt(v * v + 2 * h * a)) / -a;
            }
            // end if (fuel runs out case)


            touchdown = fuel_out || time_to_touchdown < TIME_SLICE;

            // If not, advance everything one time period and keep going

            if (!touchdown) {
                t = t + TIME_SLICE;
                f = f - TIME_SLICE * MAX_BURN_RATE * thrust / 100.0;
                h = h - TIME_SLICE * v - a * TIME_SLICE * TIME_SLICE / 2;
                v = v + TIME_SLICE * a;
            }

        }

        // We're down! Print out the final numbers.

        System.out.println("Touchdown at time " + (t + time_to_touchdown));
        double touchdown_velocity = v + a * time_to_touchdown;
        System.out.println("Velocity at touchdown: " + touchdown_velocity + "m/sec");

        // Print a suitable assessment of the landing.

        if (touchdown_velocity <= 0.5)
            System.out.println("Perfect landing!");
        else if (touchdown_velocity <= 1.0)
            System.out.println("Soft landing");
        else if (touchdown_velocity <= 2.0)
            System.out.println("Good landing");
        else if (touchdown_velocity <= 5.0)
            System.out.println("Hard landing");
        else if (touchdown_velocity <= 10.0)
            System.out.println("Lander damaged");
        else if (touchdown_velocity <= 20.0)
            System.out.println("No survivors");
        else
            System.out.println("Maybe they'll name the crater after you!");


    }
    else{ thrust = 5;

        while (!touchdown) {
     thrust += 2;


        // Display the current situation

        System.out.println("Time: " + t + " secs");
        System.out.println("Height: " + h + " m");
        System.out.println("Descent rate: " + v + " m/sec");
        System.out.println("Fuel left: " + f + " kg");
        System.out.println("Thrust: " + thrust + "%");



        System.out.println();

        // Calculate the acceleration, and how long fuel will last

        a = (GRAVITY - MAX_THRUST * thrust / 100.0);

        time_to_fuel_out = f / (MAX_BURN_RATE * thrust / 100.0);

        // calculate time_to_touchdown assuming fuel never runs out

        double discrim = v * v + 2 * h * a;
        if (discrim < 0)
            time_to_touchdown = INFINITY;
        else if (Math.abs(a) < SMALL)
            time_to_touchdown = h / v;
        else
            time_to_touchdown = (v - Math.sqrt(discrim)) / -a;

        // Handle the case when fuel will run out first

        if (time_to_fuel_out < time_to_touchdown
                && time_to_fuel_out <= TIME_SLICE) {

            System.out.println("Out of fuel! Free fall!");
            fuel_out = true;
            t = t + time_to_fuel_out;
            f = 0.0;
            h = h - time_to_fuel_out * v - a * time_to_fuel_out * time_to_fuel_out / 2.0;
            v = v + a * time_to_fuel_out;
            a = GRAVITY; //gravity never sleeps!
            time_to_touchdown = (v - Math.sqrt(v * v + 2 * h * a)) / -a;
        }
        // end if (fuel runs out case)


        touchdown = fuel_out || time_to_touchdown < TIME_SLICE;

        // If not, advance everything one time period and keep going

        if (!touchdown) {
            t = t + TIME_SLICE;
            f = f - TIME_SLICE * MAX_BURN_RATE * thrust / 100.0;
            h = h - TIME_SLICE * v - a * TIME_SLICE * TIME_SLICE / 2;
            v = v + TIME_SLICE * a;
        }

    }

        // We're down! Print out the final numbers.

        System.out.println("Touchdown at time " + (t + time_to_touchdown));
        double touchdown_velocity = v + a * time_to_touchdown;
        System.out.println("Velocity at touchdown: " + touchdown_velocity + "m/sec");

        // Print a suitable assessment of the landing.

        if (touchdown_velocity <= 0.5)
            System.out.println("Perfect landing!");
        else if (touchdown_velocity <= 1.0)
            System.out.println("Soft landing");
        else if (touchdown_velocity <= 2.0)
            System.out.println("Good landing");
        else if (touchdown_velocity <= 5.0)
            System.out.println("Hard landing");
        else if (touchdown_velocity <= 10.0)
            System.out.println("Lander damaged");
        else if (touchdown_velocity <= 20.0)
            System.out.println("No survivors");
        else
            System.out.println("Maybe they'll name the crater after you!");


    }
}

}
